#!/bin/bash

set -e

indent() {
  sed -u 's/^/       /'
}

build=$1
cache=$2

#ensure it exists
mkdir -p ${cache}

tmate_file="tmate-slave.tgz"

# https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz
libe_version="2.0.21"
libe_dir="libevent-${libe_version}-stable"
libe_file="${libe_dir}.tar.gz"
libe_url="https://github.com/downloads/libevent/libevent/${libe_file}"

cache_target=${cache}/${tmate_file}
build_target=${build}
target=/app/.local

if [ ! -f ${cache_target} ]; then
  echo "=====> No cached compile detected. Bulding..."
  cd $build

  echo "-----> Compiling libevent v${libe_version}..."
  #Compile libevent
  wget ${libe_url}
  tar zxf ${libe_file}
  cd ${libe_dir}
  ./configure --prefix=${target} | indent
  make install | indent
  cd ..

  # download tmate
  echo "-----> Downloading tmate..."
  git clone https://github.com/tmate-io/tmate-slave.git
  cd tmate-slave
  ./create_keys.sh
  ./autogen.sh && ./configure && make
  cp tmate-slave ${target}/bin/tmate-slave

  # download unbuffer
  echo "-----> Downloading launcher..."
  curl -s https://s3.amazonaws.com/tmate-buildpack-assets/launch > ${target}/bin/launch
  chmod +x ${target}/bin/launch

  #Create cache slug
  tar czf ${cache_target} -C ${target} .
fi

mkdir -p ${build_target}
tar xzf ${cache_target} -C ${build_target}

chmod +x ${build_target}/bin/tmate-slave
chmod +x ${build_target}/bin/launch

mkdir -p $build/.profile.d
echo 'export LD_LIBRARY_PATH=/app/lib' > $build/.profile.d/tmate.sh
echo 'export TERM=screen-256color' >> $build/.profile.d/tmate.sh
echo 'export PATH=$PATH:$HOME/bin' >> $build/.profile.d/tmate.sh
echo 'ssh-keygen -q -t rsa -f /home/vcap/.ssh/id_rsa -N ""' >> $build/.profile.d/tmate.sh
